# Generated by Django 3.2.7 on 2022-12-27 11:17

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Name of company')),
                ('info', models.TextField(blank=True, null=True, verbose_name='Info about company')),
                ('tagline', models.CharField(blank=True, max_length=255, null=True, verbose_name='Companies tagline')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Companies logo')),
                ('foundation_date', models.DateField(blank=True, null=True, verbose_name='Foundation date')),
                ('phone_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(regex='^\\+375 \\((29|44|33)\\) [0-9]{3}-[0-9]{2}-[0-9]{2}$')], verbose_name='Phone number')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=255, verbose_name='Employee name')),
                ('middle_name', models.CharField(max_length=255, verbose_name='Employee middle name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Employee lastname')),
                ('age', models.CharField(max_length=2, verbose_name='Employee age')),
                ('sex', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female')], max_length=255, null=True)),
                ('phone_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(regex='^\\+375 \\((29|44|33)\\) [0-9]{3}-[0-9]{2}-[0-9]{2}$')], verbose_name='Phone number')),
                ('clothing_size', models.CharField(blank=True, choices=[('S', 'S'), ('M', 'M'), ('L', 'L')], max_length=1, null=True)),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ('first_name', 'last_name', 'middle_name'),
            },
        ),
        migrations.CreateModel(
            name='JobTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=255, verbose_name='Job title')),
            ],
            options={
                'verbose_name': 'JobTitle',
                'verbose_name_plural': 'JobTitles',
                'ordering': ('company_id', 'employee_id'),
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, verbose_name='Title of language')),
                ('code', models.CharField(max_length=3, verbose_name='Code of language')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='LanguageKnowledgeLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowledge_level', models.CharField(choices=[('TRAINEE', 'Trainee'), ('JUNIOR', 'Junior'), ('MIDDLE', 'Middle'), ('SENIOR', 'Senior'), ('TECH_LEAD', 'Tech lead'), ('TEAM_LEAD', 'Team lead')], max_length=255, verbose_name="Employee's knowledge level")),
            ],
            options={
                'verbose_name': 'LanguageKnowledgeLevel',
                'verbose_name_plural': 'LanguagesKnowledgeLevels',
                'ordering': ('employee_id', 'language_id'),
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', django_countries.fields.CountryField(max_length=2, verbose_name="Location's country")),
                ('city', models.CharField(max_length=255, verbose_name="Location's city")),
                ('street', models.CharField(max_length=255, verbose_name='Street')),
                ('house_number', models.PositiveSmallIntegerField(verbose_name='House number')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'ordering': ('country', 'city', 'street', 'house_number'),
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, max_length=255, null=True, verbose_name='Description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='location',
            constraint=models.UniqueConstraint(fields=('country', 'city', 'street', 'house_number'), name='unique_locations'),
        ),
        migrations.AddField(
            model_name='languageknowledgelevel',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.employee', verbose_name='Employee'),
        ),
        migrations.AddField(
            model_name='languageknowledgelevel',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.language', verbose_name="Employee's language"),
        ),
        migrations.AddField(
            model_name='jobtitle',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company', verbose_name='Job title in company'),
        ),
        migrations.AddField(
            model_name='jobtitle',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.employee', verbose_name="Employee's job title"),
        ),
        migrations.AddField(
            model_name='employee',
            name='companies',
            field=models.ManyToManyField(related_name='employees', related_query_name='employee', through='company.JobTitle', to='company.Company'),
        ),
        migrations.AddField(
            model_name='employee',
            name='languages',
            field=models.ManyToManyField(related_name='employees', related_query_name='employees', through='company.LanguageKnowledgeLevel', to='company.Language'),
        ),
        migrations.AddField(
            model_name='employee',
            name='skills',
            field=models.ManyToManyField(blank=True, related_name='skills', related_query_name='skill', to='company.Skill'),
        ),
        migrations.AddField(
            model_name='company',
            name='locations',
            field=models.ManyToManyField(to='company.Location'),
        ),
        migrations.AddField(
            model_name='company',
            name='partners',
            field=models.ManyToManyField(blank=True, related_name='_company_company_partners_+', to='company.Company'),
        ),
        migrations.AddConstraint(
            model_name='languageknowledgelevel',
            constraint=models.UniqueConstraint(fields=('employee_id', 'language_id'), name='unique_knowledge'),
        ),
        migrations.AddConstraint(
            model_name='jobtitle',
            constraint=models.UniqueConstraint(fields=('company_id', 'employee_id'), name='unique_job_title'),
        ),
    ]
